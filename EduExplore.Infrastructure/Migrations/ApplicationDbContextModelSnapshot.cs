// <auto-generated />
using System;
using EduExplore.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduExplore.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.DetailedInstitutionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("DetailedInstitutionTypes");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.FinancialType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("FinancialTypes");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.InhabitedArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("InhabitedAreas");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DetailedInstitutionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FinancialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InhabitedAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DetailedInstitutionTypeId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("FinancialTypeId");

                    b.HasIndex("InhabitedAreaId");

                    b.HasIndex("InstitutionTypeId");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("RegionId");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.InstitutionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("InstitutionTypes");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.Municipality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.Institution", b =>
                {
                    b.HasOne("EduExplore.Infrastructure.Data.DbModels.DetailedInstitutionType", "DetailedInstitutionType")
                        .WithMany("Institutions")
                        .HasForeignKey("DetailedInstitutionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduExplore.Infrastructure.Data.DbModels.District", "District")
                        .WithMany("Institutions")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduExplore.Infrastructure.Data.DbModels.FinancialType", "FinancialType")
                        .WithMany("Institutions")
                        .HasForeignKey("FinancialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduExplore.Infrastructure.Data.DbModels.InhabitedArea", "InhabitedArea")
                        .WithMany("Institutions")
                        .HasForeignKey("InhabitedAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduExplore.Infrastructure.Data.DbModels.InstitutionType", "InstitutionType")
                        .WithMany("Institutions")
                        .HasForeignKey("InstitutionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduExplore.Infrastructure.Data.DbModels.Municipality", "Municipality")
                        .WithMany("Institutions")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduExplore.Infrastructure.Data.DbModels.Region", "Region")
                        .WithMany("Institutions")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailedInstitutionType");

                    b.Navigation("District");

                    b.Navigation("FinancialType");

                    b.Navigation("InhabitedArea");

                    b.Navigation("InstitutionType");

                    b.Navigation("Municipality");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.DetailedInstitutionType", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.District", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.FinancialType", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.InhabitedArea", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.InstitutionType", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.Municipality", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("EduExplore.Infrastructure.Data.DbModels.Region", b =>
                {
                    b.Navigation("Institutions");
                });
#pragma warning restore 612, 618
        }
    }
}
